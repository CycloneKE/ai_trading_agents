name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov pylint black
        
    - name: Lint with pylint
      run: |
        pylint --disable=C0111,C0103,C0303,C0330,C0326 --max-line-length=120 *.py
        
    - name: Check formatting with black
      run: |
        black --check --line-length 100 .
        
    - name: Test with pytest
      run: |
        pytest --cov=. --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/ai-trading-agent:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/ai-trading-agent:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ai-trading-agent:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ai-trading-agent:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    # Add permissions for authenticating to GCP
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
        service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

    - name: Deploy to Cloud Run
      id: deploy
      uses: 'google-github-actions/deploy-cloudrun@v1'
      with:
        service: 'ai-trading-agent' # Choose a name for your service
        region: 'us-central1' # Choose a region for your service
        image: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ai-trading-agent:${{ github.sha }}'
        # Assign the service account to the Cloud Run service for runtime permissions
        service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'